openapi: 3.0.3
info:
  title: FDK metadata quality service
  description: A backend service that will assess metadata quality of datasets, dataservices, concepts
  version: '1.0'
  contact:
    name: Digitaliseringsdirektoratet
    url: 'https://digdir.no'
  license:
    name: License of API
    url: 'http://data.norge.no/nlod/no/2.0'
paths:
  /validation:
    post:
      description: Validates RDF graph and generates a validation report
      operationId: createValidationReport
      requestBody:
        description: An RDF graph
        content:
          text/turtle:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            text/turtle:
              schema:
                type: string
  /assessment:
    post:
      description: Creates a metadata quality assessment
      operationId: createMetadataQualityAssessment
      parameters:
        - in: query
          name: entityType
          required: true
          schema:
            $ref: '#/components/schemas/EntityType'
          description: Entity type of interest
      requestBody:
        description: An RDF graph
        content:
          text/turtle:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assessment'
  /assessment/catalog/rating:
    get:
      description: Returns metadata quality assessment rating of a given catalog
      operationId: getCatalogAssessmentRating
      parameters:
        - in: query
          name: catalogId
          required: false
          schema:
            type: string
          description: Catalog ID of interest
        - in: query
          name: catalogUri
          required: false
          schema:
            type: string
          description: Catalog URI of interest
        - in: query
          name: entityType
          required: false
          schema:
            $ref: '#/components/schemas/EntityType'
          description: Entity type of interest
        - in: query
          name: contexts
          required: false
          schema:
            type: array
            default: FDK
            items:
              $ref: '#/components/schemas/Context'
          description: Comma-separated list of contexts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
  /assessment/entity:
    get:
      description: Returns metadata quality assessment for a given entity
      operationId: getMetadataQualityAssessmentForEntity
      parameters:
        - in: query
          name: entityUri
          required: true
          schema:
            type: string
          description: Entity URI of interest
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
  /assessment/entities:
    get:
      description: Returns metadata quality assessments for given entities
      operationId: getMetadataQualityAssessmentsForEntities
      parameters:
        - in: query
          name: entityUris
          required: true
          schema:
            type: array
            items:
              type: string
          description: Comma-separated entity URIs of interest
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assessment'
  /assessment/entities/paged:
    get:
      description: Returns a paged list of metadata quality assessments
      operationId: getPagedMetadataQualityAssessments
      parameters:
        - in: query
          name: catalogId
          required: false
          schema:
            type: string
          description: Catalog ID of interest
        - in: query
          name: entityType
          required: false
          schema:
            $ref: '#/components/schemas/EntityType'
          description: Entity type of interest
        - in: query
          name: contexts
          required: false
          schema:
            type: array
            default: FDK
            items:
              $ref: '#/components/schemas/Context'
          description: Comma-separated list of contexts
        - in: query
          name: page
          required: false
          schema:
            type: string
            default: 0
          description: Page numer
        - in: query
          name: size
          required: false
          schema:
            type: string
            default: 10
          description: Page size
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedAssessments'
components:
  schemas:
    EntityType:
      type: string
      enum:
        - dataset
    Catalog:
      properties:
        id:
          type: string
        uri:
          type: string
    Entity:
      properties:
        uri:
          type: string
        type:
          $ref: '#/components/schemas/EntityType'
        title:
          type: object
          additionalProperties: true
        catalog:
          $ref: '#/components/schemas/Catalog'
        contexts:
          type: array
          items:
            $ref: '#/components/schemas/Context'
    RatingCategory:
      type: string
      enum:
        - excellent
        - good
        - sufficient
        - poor
    DimensionType:
      type: string
      enum:
        - accessibility
        - findability
        - interoperability
        - readability
        - reusability
    IndicatorType:
      type: string
      enum:
        - title
        - titleNoOrgName
        - description
        - descriptionWithoutTitle
        - distributableData
        - controlledVocabularyUsage
        - licenseInformation
        - keywordUsage
        - subjectUsage
        - geoSearch
        - contactPoint
    Context:
      type: string
      enum:
        - FDK
        - NAP
    Rating:
      properties:
        score:
          type: integer
        maxScore:
          type: integer
        satisfiedCriteria:
          type: integer
        totalCriteria:
          type: integer
        category:
          $ref: '#/components/schemas/RatingCategory'
        dimensionsRating:
          type: object
          additionalProperties: true
    Dimension:
      properties:
        type:
          $ref: '#/components/schemas/DimensionType'
        rating:
          $ref: '#/components/schemas/Rating'
        indicators:
          type: array
          items:
            $ref: '#/components/schemas/Indicator'
    Indicator:
      properties:
        type:
          $ref: '#/components/schemas/IndicatorType'
        weight:
          type: integer
        conforms:
          type: boolean
    Assessment:
      properties:
        id:
          type: string
        entity:
          $ref: '#/components/schemas/Entity'
        rating:
          $ref: '#/components/schemas/Rating'
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
        updated:
          type: string
          format: date-time
    Pageable:
      properties:
        offset:
          type: integer
        pageNumber:
          type: integer
        pageSize:
          type: integer
    PagedAssessments:
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Assessment'
        pageable:
          $ref: '#/components/schemas/Pageable'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
        totalPages:
          type: integer
        totalElements:
          type: integer
        size:
          type: integer
        number:
          type: integer
        numberOfElements:
          type: integer
